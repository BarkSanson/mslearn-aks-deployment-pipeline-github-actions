name: Build and push the latest build to staging

on:
  push:
    branches: [ main ]
    
jobs:
  build_push_image:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      
      - name: Set up Buildx
        uses: docker/setup-buildx-action@v1
      
      - name: Docker Login
        uses: docker/login-action@v2.2.0
        with:
          # Server address of Docker registry. If not set then will default to Docker Hub
          registry: ${{ secrets.ACR_NAME }}
          # Username used to log against the Docker registry
          username: ${{ secrets.ACR_LOGIN }}
          # Password or personal access token used to log against the Docker registry
          password: ${{ secrets.ACR_PASSWORD }}
          
      - name: Build and push staging images
        uses: docker/build-push-action@v4.1.1
        with:
          # Build's context is the set of files located in the specified PATH or URL
          context: .
          # Push is a shorthand for --output=type=registry
          push: true
          # List of tags
          tags: ${{ secrets.ACR_NAME }}/contoso-website:latest
  
  deploy:
    runs-on: ubuntu-20.04
    needs: build_push_image
    
    steps:
      - uses: actions/checkout@v2
      
      - name: Install Helm
        uses: Azure/setup-helm@v1
        with:
          version: v3.3.1
      
      - name: Azure login
        uses: azure/login@v1.4.3
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
          
      - name: Azure Kubernetes set context
        uses: Azure/aks-set-context@v3
        with:
          # Resource Group Name
          resource-group: mslearn-gh-pipelines-20344
          # AKS Cluster Name
          cluster-name: contoso-video
          
      - name: Run Helm Deploy
        run: |
          helm upgrade \
            --install \
            --create-namespace \
            --atomic \
            --wait \
            --namespace staging \
            contoso-website \
            ./kubernetes/contoso-website \
            --set image.repository=${{ secrets.ACR_NAME }} \
            --set dns.name=${{ secrets.DNS_NAME }}
